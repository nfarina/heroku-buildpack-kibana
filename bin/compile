#!/bin/sh

indent() {
  sed -u 's/^/       /'
}

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

INIT_SCRIPT="$BUILD_DIR/.profile.d/kibana.sh"

if [ -f "$ENV_DIR/DOWNLOAD_URL" ]; then
  DOWNLOAD_URL=$(cat $ENV_DIR/DOWNLOAD_URL)
else
  DOWNLOAD_URL="https://artifacts.elastic.co/downloads/kibana/kibana-5.4.0-linux-x86_64.tar.gz"
fi

KIBANA_PACKAGE=${DOWNLOAD_URL##*/}


case ${KIBANA_PACKAGE} in
  *.tar.gz)
    KIBANA_DIR="$BUILD_DIR/${KIBANA_PACKAGE%%.tar.gz}"
    tar="tar xz"
    ;;
  *)
    echo "Only tar.gz is supported: $KIBANA_PACKAGE" | indent
    exit 1
    ;;
esac

mkdir="mkdir -p"
download="curl -sLO"
extract="$tar -C $BUILD_DIR --wildcards -f"
verify="sha1sum --check --warn"

echo "-----> Installing Kibana..."

$mkdir ${INIT_SCRIPT%/*}
$mkdir $CACHE_DIR

if [ ! -f "$CACHE_DIR/$KIBANA_PACKAGE" ]; then
  echo "downloading $DOWNLOAD_URL" | indent
  $download $DOWNLOAD_URL

  # echo "verifying against ${DOWNLOAD_URL}.sha1" | indent
  # $download "${DOWNLOAD_URL}.sha1"
  # $verify "${KIBANA_PACKAGE}.sha1"

  if [ $? -eq 0 ]; then
    mv $KIBANA_PACKAGE $CACHE_DIR
  else
    exit 1
  fi
fi

$extract $CACHE_DIR/$KIBANA_PACKAGE

# Copy environment variables to kibana.yml since it doesn't seem to respect them otherwise.
echo "elasticsearch.url: \"$(cat $ENV_DIR/ELASTICSEARCH_URL)\"" >> ${KIBANA_DIR}/config/kibana.yml
echo "elasticsearch.username: \"$(cat $ENV_DIR/ELASTICSEARCH_URL)\"" >> ${KIBANA_DIR}/config/kibana.yml
echo "elasticsearch.password: \"$(cat $ENV_DIR/ELASTICSEARCH_URL)\"" >> ${KIBANA_DIR}/config/kibana.yml

cat >> ${KIBANA_DIR}/config/kibana.yml << 'EOF'
xpack.reporting.enabled: false
xpack.monitoring.enabled: false
xpack.ml.enabled: false
xpack.graph.enabled: false
xpack.watcher.enabled: false
EOF

echo "Installing XPACK ..."
${KIBANA_DIR}/bin/kibana-plugin install x-pack

echo "Exporting PATH" | indent
echo 'export PATH="$PATH:'${KIBANA_DIR##*/}'/bin"' > $INIT_SCRIPT
